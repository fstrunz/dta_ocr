import os
import argparse
from pathlib import Path


# Path("abc.pred.xml").stem will yield "abc.pred".
# innermost_stem produces "abc" instead
def innermost_stem(path: Path) -> Path:
    path_stem = path.stem

    while path.suffixes:
        path = Path(path_stem)
        path_stem = path.stem

    return path_stem


def create_symlinks(facsimile_path: Path):
    training_path = Path("training")
    training_path.mkdir(exist_ok=True)

    for document_path in facsimile_path.iterdir():
        dta_dirname = innermost_stem(document_path)

        for doc_path in document_path.iterdir():
            if doc_path.suffixes == [".gt", ".xml"]:
                filename = f"{dta_dirname}_{innermost_stem(doc_path)}"

                os.symlink(doc_path, training_path /
                           f"{filename}.xml")
                os.symlink(
                    doc_path / Path(f"{innermost_stem(doc_path)}.jpg"),
                    training_path /
                    f"{filename}.jpg"
                )


def main():
    arg_parser = argparse.ArgumentParser(
        "makegtsymlinks",
        description=(
            "Given a facsimile directory, creates a directory of symlinks " +
            "to the facsimiles which can be used for Calamari training."
        )
    )
    arg_parser.add_argument(
        "--facsimile-dir", dest="facsimile_dir", default="facsimiles",
        help=(
            "The facsimile directory as generated by download.py " +
            "and segment.py."
        )
    )
    args = arg_parser.parse_args()

    facsimile_path = Path(args.facsimile_dir)
    if not facsimile_path.is_dir():
        print("Given --facsimile-dir is not a directory!!!")
        exit(1)

    create_symlinks(facsimile_path)


if __name__ == "__main__":
    main()
